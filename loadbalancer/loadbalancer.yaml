AWSTemplateFormatVersion: 2010-09-09
Description: Itea base course. Cloudformation
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    ConstraintDescription: must be a valid EC2 instance type.

  VPCId:
    Description: VPC id where resources will be created
    Type: AWS::EC2::VPC::Id

  # ParamPublicSubnet1CIDR:
  #   Description: Enter the IP range (CIDR notation) for the public subnet in AZ A
  #   Type: String
  #   Default: 10.0.192.0/24

  # ParamPublicSubnet2CIDR:
  #   Description: Enter the IP range (CIDR notation)  for the public subnet in AZ B
  #   Type: String
  #   Default: 10.0.193.0/24
  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
  
  PublicSubnet2:
    Type: AWS::EC2::Subnet::Id

  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  LatestAmiId:
    Type:  AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:
  # VPC:
  #   Type: AWS::EC2::VPC
  #   Properties:
  #     CidrBlock: !Ref VPCId
  #     Tags:
  #       - Key: Name
  #         Value: itea-test-vpc

  # InternetGateway:
  #   Type: AWS::EC2::InternetGateway
  #   Properties:
  #     Tags:
  #       - Key: Network
  #         Value: Public

  # VPCGatewayAttachment:
  #   Type: AWS::EC2::VPCGatewayAttachment
  #   Properties:
  #     VpcId: !Ref VPC
  #     InternetGatewayId: !Ref InternetGateway

  # PublicSubnet1:
  #   Type: AWS::EC2::Subnet
  #   Properties:
  #     AvailabilityZone: eu-west-1a
  #     VpcId: !Ref VPC
  #     CidrBlock: !Ref ParamPublicSubnet1CIDR
  #     MapPublicIpOnLaunch: true

  # PublicSubnet2:
  #   Type: AWS::EC2::Subnet
  #   Properties:
  #     AvailabilityZone: eu-west-1b
  #     VpcId: !Ref VPC
  #     CidrBlock: !Ref ParamPublicSubnet2CIDR
  #     MapPublicIpOnLaunch: true

  # PublicRouteTable:
  #   Type: AWS::EC2::RouteTable
  #   Properties:
  #     VpcId: !Ref VPC
  #     Tags:
  #     - Key: Name
  #       Value: Public

  # PublicRoute:
  #   Type: AWS::EC2::Route
  #   DependsOn: VPCGatewayAttachment
  #   Properties:
  #     RouteTableId: !Ref PublicRouteTable
  #     DestinationCidrBlock: 0.0.0.0/0
  #     GatewayId: !Ref InternetGateway

  # PublicSubnet1RouteTableAssociation:
  #   Type: AWS::EC2::SubnetRouteTableAssociation
  #   Properties:
  #     SubnetId: !Ref PublicSubnet1
  #     RouteTableId: !Ref PublicRouteTable

  # PublicSubnet2RouteTableAssociation:
  #   Type: AWS::EC2::SubnetRouteTableAssociation
  #   Properties:
  #     SubnetId: !Ref PublicSubnet1
  #     RouteTableId: !Ref PublicRouteTable

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: security group for ALB
      GroupName: itea-ALB-SG
      VpcId: !Ref VPCId
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: Itea-Application-Load-Balancer
      Scheme: internet-facing
      Type: application
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      IpAddressType: ipv4
      SecurityGroups: 
        - !Ref ALBSecurityGroup
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: 60
        - Key: deletion_protection.enabled
          Value: false
        - Key: routing.http2.enabled
          Value: "true"
        - Key: routing.http.drop_invalid_header_fields.enabled
          Value: false
  
  HTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions: 
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: "text/plain"
            MessageBody: "Try another URL"
            StatusCode: 200
  
  EC2Instance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: !Ref LatestAmiId
      Tags:
        - Key: Name
          Value: itea-instance1
      UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -xe
            sudo -i
            amazon-linux-extras install nginx1 -y
            sudo service nginx start

  EC2Instance2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: !Ref LatestAmiId
      Tags:
        - Key: Name
          Value: itea-instance2
      UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -xe
            sudo -i
            amazon-linux-extras install nginx1 -y
            sudo service nginx start
  
  TargetGroup:  
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckIntervalSeconds: 30
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckPort: traffic-port
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Name: Itea-TG
      Port: 80
      Targets: 
        - Id: !Ref EC2Instance1 
        - Id: !Ref EC2Instance2
          Port: 80
      Protocol: HTTP
      TargetType: instance
      UnhealthyThresholdCount: 2
      VpcId: !Ref VPCId
  
  TestListenerRule:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Priority: "1"
      ListenerArn: !Ref HTTPListener
      Conditions: 
        Field: path-pattern
        Values: /test 
      Actions: 
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
          Order: 1
         
Outputs:
  ApplicationLoadBalancer:
    Description: The created loadbalancer
    Value: !Ref ApplicationLoadBalancer

  TargetGroup:
    Description: The created TargetGroup
    Value: !Ref TargetGroup

  LoadBalancerSecurityGroup:
    Description: the securty group for the ALB
    Value: !Ref ALBSecurityGroup